# All binaries necessary to run rules.
# Assume clang is on PATH, but llvm-link needs special handing on Linux
export CLANG := clang
export HOST  := $(shell uname -s)

ifeq (${HOST},Linux)
	export LLVM_LINK := /usr/lib/llvm-7/bin/llvm-link
	export PLATFORM_INCLUDES :=
else
	# Assumed to be Host = Darwin
	export LLVM_LINK := /usr/local/opt/llvm/bin/llvm-link
	export PLATFORM_INCLUDES :=
endif

# Default to GCC
USE_CLANG ?= yes

# Decide which compiler to use
ifeq ($(USE_CLANG),yes)
export CC = clang
else
export CC = gcc
export WERROR = -Werror
endif

SOURCE_BASE_DIR = $(PWD)
export OSD_SOURCE_DIR	 = $(SOURCE_BASE_DIR)/os/posix
export SBB_SOURCE_DIR	 = $(SOURCE_BASE_DIR)/sbb
export LOG_SOURCE_DIR	 = $(SOURCE_BASE_DIR)/logging
export CRYPTO_SOURCE_DIR = $(SOURCE_BASE_DIR)/crypto

export WARNINGS= $(WERROR) -Wall -Wextra -Wshadow -Wpointer-arith -Wbad-function-cast -Wcast-align -Wsign-compare \
		-Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wunused

export INCLUDES += -I $(INCLUDE_DIR)

export CFLAGS += -DSIMULATION -DNO_MEMSET_S
export CFLAGS += $(WARNINGS) $(INCLUDES)
export CFLAGS += -O0 -g3 $(ARCH) $(ABI) $(COMPILER_FLAGS)
