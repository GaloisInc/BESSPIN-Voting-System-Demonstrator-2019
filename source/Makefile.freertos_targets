DEFAULT_PROG ?= default_ballot_box
BOX1_PROG ?= ballot_box_1
BOX2_PROG ?= ballot_box_2
BOX3_PROG ?= ballot_box_3
BOX4_PROG ?= ballot_box_4

DEFAULT_SRC = \
    ../sbb/sbb_config_default.c \
    ../crypto/crypto_config_default.c

# there is almost certainly a better way of doing this, but
# this will work for now
#
# note that the "sbb_config_box*" files contain both crypto and
# TCP/naming configurations; the crypto default configuration in
# the crypto directory exists solely to allow crypto tests to be
# run on their own
BOX1_SRC = sbb_config_box1.c
BOX2_SRC = sbb_config_box2.c
BOX3_SRC = sbb_config_box3.c
BOX4_SRC = sbb_config_box4.c

#
# Define all object files.
#
RTOS_OBJ = $(FREERTOS_SRC:.c=.o)
RTOS_TCP_OBJ = $(FREERTOS_TCP_SRC:.c=.o)
APP_OBJ  = $(APP_SRC:.c=.o)
PORT_OBJ = $(PORT_SRC:.c=.o)
DEMO_OBJ = $(DEMO_SRC:.c=.o)
PORT_ASM_OBJ = $(PORT_ASM:.S=.o)
CRT0_OBJ = $(CRT0:.S=.o)
OBJS = $(CRT0_OBJ) $(PORT_ASM_OBJ) $(PORT_OBJ) $(RTOS_OBJ) $(RTOS_TCP_OBJ) $(DEMO_OBJ) $(APP_OBJ)
OBJS_DEFAULT = $(OBJS) $(DEFAULT_SRC:.c=.o)
OBJS_BOX1 = $(OBJS) $(BOX1_SRC:.c=.o)
OBJS_BOX2 = $(OBJS) $(BOX2_SRC:.c=.o)
OBJS_BOX3 = $(OBJS) $(BOX3_SRC:.c=.o)
OBJS_BOX4 = $(OBJS) $(BOX4_SRC:.c=.o)


$(info ASFLAGS=$(ASFLAGS))
$(info LDLIBS=$(LDLIBS))
$(info CFLAGS=$(CFLAGS))
$(info LDFLAGS=$(LDFLAGS))
$(info ARFLAGS=$(ARFLAGS))
$(info CC=$(CC))
$(info GCC=$(GCC))

%.o: %.c
	@echo "    CC $<"
	@$(CC) -c $(CFLAGS) -o $@ $<

%.o: %.S
	@echo "    CC $<"
	@$(CC) $(ASFLAGS) -c $(CFLAGS) -o $@ $<

default: $(DEFAULT_PROG).elf

all: $(DEFAULT_PROG).elf $(BOX1_PROG).elf $(BOX2_PROG).elf $(BOX3_PROG).elf $(BOX4_PROG).elf

$(DEFAULT_PROG).elf  : $(OBJS_DEFAULT)
	@echo Linking....
	@$(GCC) -o $@ $(LDFLAGS) $(OBJS_DEFAULT) $(LIBS)
	@$(OBJDUMP) -S $(DEFAULT_PROG).elf > $(DEFAULT_PROG).asm
	@echo Completed $@

$(BOX1_PROG).elf  : $(OBJS_BOX1)
	@echo Linking....
	@$(GCC) -o $@ $(LDFLAGS) $(OBJS_BOX1) $(LIBS)
	@$(OBJDUMP) -S $(BOX1_PROG).elf > $(BOX1_PROG).asm
	@echo Completed $@

$(BOX2_PROG).elf  : $(OBJS_BOX2)
	@echo Linking....
	@$(GCC) -o $@ $(LDFLAGS) $(OBJS_BOX2) $(LIBS)
	@$(OBJDUMP) -S $(BOX2_PROG).elf > $(BOX2_PROG).asm
	@echo Completed $@

$(BOX3_PROG).elf  : $(OBJS_BOX3)
	@echo Linking....
	@$(GCC) -o $@ $(LDFLAGS) $(OBJS_BOX3) $(LIBS)
	@$(OBJDUMP) -S $(BOX3_PROG).elf > $(BOX3_PROG).asm
	@echo Completed $@

$(BOX4_PROG).elf  : $(OBJS_BOX4)
	@echo Linking....
	@$(GCC) -o $@ $(LDFLAGS) $(OBJS_BOX4) $(LIBS)
	@$(OBJDUMP) -S $(BOX4_PROG).elf > $(BOX4_PROG).asm
	@echo Completed $@

clean :
	@rm -f $(OBJS_DEFAULT) $(OBJS_BOX1) $(OBJS_BOX2) $(OBJS_BOX3) $(OBJS_BOX4)
	@rm -f $(DEFAULT_PROG).elf $(BOX1_PROG).elf $(BOX2_PROG).elf $(BOX3_PROG).elf $(BOX4_PROG).elf
	@rm -f $(DEFAULT_PROG).map $(BOX1_PROG).map $(BOX2_PROG).map $(BOX3_PROG).map $(BOX4_PROG).map
	@rm -f $(DEFAULT_PROG).asm $(BOX1_PROG).asm $(BOX2_PROG).asm $(BOX3_PROG).asm $(BOX4_PROG).asm
