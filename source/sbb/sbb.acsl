/**
 * Smart Ballot Box ACSL specification
 * @refine sbb.lando
 */

#ifndef __SBB_API_ACSL__
#define __SBB_API_ACSL__

#include "sbb_t.h"

// @design Frama-C does not support model variables, so we break the
// abstraction barrier and characterize model state using concrete
// implementation variables that are conditionally compiled.

#ifdef SPEC_DEBUG

bool has_barcode;
barcode current_barcode;
bool cast_button;
bool spoil_button;
bool cast_button_light;
bool spoil_button;
bool motor_on;
bool motor_forward;
bool motor_backward;
// @todo kiniry State names must be extracted from ASMs.
typedef enum { INIT, STOP } sbb_state
sbb_state state;

// @design kiniry Note that when the SBB is powered on, a ballot paper
// may be inside of the device.  We cannot make assumptions about
// initial button state as they may get physically stuck or someone
// can hold them down during reset.

/*@
  predicate lights_off = !cast_button_light && !spoil_button_light;
  predicate buttons_up = !cast_button && !spoil_button;
  predicate motor_running = motor_forward || motor_backward;
  predicate initial_state = lights_off && !motor_on && state == INIT;
@*/

//@ global invariant oneway_motor: !(motor_forward && motor_backward);
//@ global invariant start_state: \at(initial_state, Init);

#endif

#endif
