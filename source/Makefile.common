### Global Configuration (for all builds)
ifeq ($(NETWORK_LOGS),yes)
	export CFLAGS += -DNETWORK_LOGS
  INCLUDE_LOGS  := yes
endif

ifeq ($(FS_LOGS),yes)
	export CFLAGS += -DFS_LOGS
  INCLUDE_LOGS  := yes
endif

ifeq ($(INCLUDE_LOGS),yes)
	export CFLAGS += -DSBB_DO_LOGGING
endif

$(info INCLUDE_LOGS=$(INCLUDE_LOGS))
$(info NETWORK_LOGS=$(NETWORK_LOGS))
$(info FS_LOGS=$(FS_LOGS))

### OS-independent source files
export CRYPTO_SRC = $(CRYPTO_DIR)/base64.c \
					$(CRYPTO_DIR)/crypto_t.c \
					$(CRYPTO_DIR)/crypto.c \
					$(CRYPTO_DIR)/sha2-openbsd.c \
					$(CRYPTO_DIR)/aes.c \
					$(CRYPTO_DIR)/cbc.c \
					$(CRYPTO_DIR)/mode_wrappers.c

ifeq ($(INCLUDE_LOGS),yes)
  $(info Pulling in logging subsystem)
  export LOGGING_SRC = $(LOG_DIR)/log_t.c \
                       $(LOG_DIR)/log.c \
                       $(LOG_DIR)/log_io.c \
                       $(LOG_DIR)/secure_log_t.c \
                       $(LOG_DIR)/secure_log.c
endif

ifeq ($(NETWORK_LOGS),yes)
  $(info Pulling in network logging subsystem)
  export LOGGING_SRC += $(LOG_DIR)/log_net.c
endif

export SBB_SRC = $(SBB_DIR)/sbb.c \
				 $(SBB_DIR)/sbb_machine.c \
				 $(SBB_DIR)/sbb_strings.c \
				 $(SBB_DIR)/sbb_logging.c \
				 $(SBB_DIR)/sbb_crypto.c

export DEMO_SRC = $(OSD_SRC) $(CRYPTO_SRC) $(LOGGING_SRC) $(SBB_SRC)
