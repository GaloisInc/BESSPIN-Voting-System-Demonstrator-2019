Starting Point
--------------

1. I Started with clean install of MacOS 10.14.5, running in a VM under Parallels.

BASICS
------

2. Install Homebrew

OPAM
----

3. Install and initalize opam

   brew install opam
   opam init  (respond 'y' and 'y' to two questions)

Frama-C
-------

4. Install Frama-C using opam
5. Check Frama-C realy is version 18.0 (Argon)

CLANG
-----

6. Clang is installed by default on MacOS, in /usr/bin/clang


Clang-Format
------------

7. brew install clang-format

LLVM-Link
---------

Currently, I cannot find a package or binary release of llvm-link for
MacOS. This impacts the "make bytecode" target, which in turn, is needed
for verification using SAW. TBD.


MILESTONE 1
-----------

This set of tools should be enough to reproduce the Frama-C analyses
of the SHAVE application software.

COQ
---

Even if not usign Coq for formal proofs, it is needed to build the BESSPIN Book.

9. opam install coq
   opam install coqide

Z3 4.7.1
--------

Z3 (precisely version 4.7.1) is a pre-requisite for Cryptol.

Download the package for x64-osx-10.11.6 from https://github.com/Z3Prover/z3/releases
Extract the ZIP file and move the extracted directory to $HOME/tools

Edit $HOME/.bash_profile to add $HOME/tools/z3*/bin to your PATH

Yices 2.6.1
-----------

Another pre-requisute for Cryptol

Relase 2.6.1 is required, but is available on HomeBrew, so:

 brew install yices2

Cryptol 2.7.0
-------------

Grab the tarball of Cryptol 2.7.0 for OSX-64 from https://github.com/GaloisInc/cryptol/releases/tag/2.7.0

Decompress the untar the tarball, and move the resulting directory to $HOME/tools

Edit $HOME/.bash_profile to add $HOME/tools/cryptol*/bin to your PATH

SAW
---

The current version to use is
  saw-0.3-OSX-64.tar.gz
from https://github.com/GaloisInc/saw-script/releases

Download, decompress and untar that file.
Move the resulting directory to $HOME/tools

Add $HOME/tools/saw-0.3-OSX-64/bin to your PATH

NIX
---

curl https://nixos.org/nix/install | sh
. $HOME/.nix-profile/etc/profile.d/nix.sh

GFE and BESSPIN Tooling
-----------------------

THIS IS CURRENTLY BROKEN as of 31/5/2019 ... see below.

Building the GFE toolset needs to happen on a native filesystem,
so we need to clone the GFE repo locally first.

cd $HOME
mkdir BESSPIN
cd BESSPIN
git clone git@gitlab-ext.galois.com:ssith/gfe.git
cd gfe
./init_submodules.sh

# Switch to the "develop" branch of the GFE repo
git checkout develop
git submodule update --init tool-suite
cd tool-suite
git checkout develop

# MODIFY nix config here to allow broken and allow unsupported packages
Create a file $HOME/.config/nixpkgs/config.nix containinf the following 2 lines

{ allowBroken = true;
  allowUnsupportedSystem = true; }

# then

nix-shell

# Warning - this takes about 3 hours to build and install the first time you
# run it...and that's on a quad-core MacBook Pro...

# This fails in the build of csmith-2.4.0 for some unknown reason.
# Resolution of these problems is TBD.

